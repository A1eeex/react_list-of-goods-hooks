{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","currentList","setCurrentList","sortBy","setSortBy","isReverse","setIsReverse","className","type","SORT_BY_ALPHABET","onClick","sortedAlphabetically","sort","good1","good2","localeCompare","sortedByLength","length","SORT_BY_LENGTH","reverseData","reverse","map","item","idUuid","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,kEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oCAAAA,E,iCAAAA,M,KAKE,IAAME,EAAgB,WAC3B,MAAsCC,mBAAmBF,GAAzD,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAiB,IAA7C,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAkCJ,oBAAkB,GAApD,mBAAOK,EAAP,KAAkBC,EAAlB,KAqCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPJ,IAAWN,EAASY,kBAAoB,WADjC,KAGTC,QA3CkB,WACxB,IAAMC,EAAuB,YAAIV,GAAaW,MAAK,SAACC,EAAOC,GACzD,OAAOT,EACHS,EAAMC,cAAcF,GACpBA,EAAME,cAAcD,MAG1BZ,EAAeS,GACfP,EAAUP,EAASY,mBA8Bf,iCAUA,wBACEC,QAtCmB,WACzB,IAAMM,EAAiB,YAAIf,GAAaW,MAAK,SAACC,EAAOC,GACnD,OAAOT,EACHS,EAAMG,OAASJ,EAAMI,OACrBJ,EAAMI,OAASH,EAAMG,UAG3Bf,EAAec,GACfZ,EAAUP,EAASqB,iBA+BbV,KAAK,SACLD,UAAS,4BACPJ,IAAWN,EAASqB,gBAAkB,WAD/B,KAHX,4BAUA,wBACER,QArCc,WACpB,IAAMS,EAAc,YAAIlB,GAAamB,UAErClB,EAAeiB,GACfb,GAAa,SAACc,GAAD,OAAcA,MAkCrBZ,KAAK,SACLD,UAAS,6BAAwBF,GAAa,WAArC,KAHX,sBAOEF,GAAUE,IACV,wBACEK,QAtCU,WAClBR,EAAeJ,GACfM,EAAU,IACVE,GAAa,IAoCLE,KAAK,SACLD,UAAU,4BAHZ,sBAUJ,6BACGN,EAAYoB,KAAI,SAACC,GAChB,IAAMC,EAASC,eAEf,OACE,oBAAiB,UAAQ,OAAzB,SACGF,GADMC,YC1GrBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5f9c7e21.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid'; // eslint-disable-line\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  SORT_BY_ALPHABET = 'SORT_BY_ALPHABET',\n  SORT_BY_LENGTH = 'SORT_BY_LENGTH',\n}\n\nexport const App: React.FC = () => {\n  const [currentList, setCurrentList] = useState<string[]>(goodsFromServer);\n  const [sortBy, setSortBy] = useState<string>('');\n  const [isReverse, setIsReverse] = useState<boolean>(false);\n\n  const handleSortAlfabet = () => {\n    const sortedAlphabetically = [...currentList].sort((good1, good2) => {\n      return isReverse\n        ? good2.localeCompare(good1)\n        : good1.localeCompare(good2);\n    });\n\n    setCurrentList(sortedAlphabetically);\n    setSortBy(SortType.SORT_BY_ALPHABET);\n  };\n\n  const handleSortByLength = () => {\n    const sortedByLength = [...currentList].sort((good1, good2) => {\n      return isReverse\n        ? good2.length - good1.length\n        : good1.length - good2.length;\n    });\n\n    setCurrentList(sortedByLength);\n    setSortBy(SortType.SORT_BY_LENGTH);\n  };\n\n  const handleReverse = () => {\n    const reverseData = [...currentList].reverse();\n\n    setCurrentList(reverseData);\n    setIsReverse((reverse) => !reverse);\n  };\n\n  const handleReset = () => {\n    setCurrentList(goodsFromServer);\n    setSortBy('');\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${\n            sortBy !== SortType.SORT_BY_ALPHABET && 'is-light'\n          } `}\n          onClick={handleSortAlfabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={handleSortByLength}\n          type=\"button\"\n          className={`button is-success ${\n            sortBy !== SortType.SORT_BY_LENGTH && 'is-light'\n          } `}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={handleReverse}\n          type=\"button\"\n          className={`button is-warning ${!isReverse && 'is-light'} `}\n        >\n          Reverse\n        </button>\n        {(sortBy || isReverse) && (\n          <button\n            onClick={handleReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {currentList.map((item) => {\n          const idUuid = uuidv4();\n\n          return (\n            <li key={idUuid} data-cy=\"Good\">\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}