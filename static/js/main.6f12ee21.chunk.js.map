{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isSorting","setSortBy","isReversed","setIsReversed","goodsList","goods","sortField","reverse","preparedGoods","sort","good1","good2","Alphabet","localeCompare","Length","length","getPreparedGoods","showResetBtn","className","type","onClick","prevVal","map","good","idUuid","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,kEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,iBAAAA,M,KA4BE,IAAME,EAAgB,WAC3B,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA3BR,SAA0BC,EAAiBC,EAAmBC,GAC5D,IAAMC,EAAa,YAAOH,GAe1B,OAbIC,GACFE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,KAAKV,EAASgB,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXR,EACKC,EAAcD,UAGhBC,EAOWQ,CAAiBnB,EAAiBG,EAAWE,GACzDe,EAA6B,KAAdjB,GAAoBE,EAOzC,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPlB,IAAcJ,EAASgB,UAAY,WAD5B,KAGTQ,QAAS,kBAAMnB,EAAUL,EAASgB,WALpC,iCAUA,wBACEO,KAAK,SACLD,UAAS,4BACPlB,IAAcJ,EAASkB,QAAU,YAEnCM,QAAS,kBAAMnB,EAAUL,EAASkB,SALpC,4BAUA,wBACEK,KAAK,SACLD,UAAS,6BAAwBhB,GAAc,YAC/CkB,QAAS,kBAAMjB,GAAc,SAACkB,GAAD,OAAcA,MAH7C,qBAQCJ,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAxCe,WACvBnB,EAAU,IACVE,GAAc,IAmCR,sBAUJ,6BACGC,EAAUkB,KAAI,SAACC,GACd,IAAMC,EAASC,eAEf,OACE,oBAAiB,UAAQ,OAAzB,SACGF,GADMC,YCtGrBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6f12ee21.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid'; // eslint-disable-line\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n}\n\nfunction getPreparedGoods(goods: string[], sortField: string, reverse:boolean) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.Alphabet:\n          return good1.localeCompare(good2);\n        case SortType.Length:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isSorting, setSortBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goodsList = getPreparedGoods(goodsFromServer, isSorting, isReversed);\n  const showResetBtn = isSorting !== '' || isReversed;\n\n  const handleClickReset = () => {\n    setSortBy('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${\n            isSorting !== SortType.Alphabet && 'is-light'\n          } `}\n          onClick={() => setSortBy(SortType.Alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${\n            isSorting !== SortType.Length && 'is-light'\n          }`}\n          onClick={() => setSortBy(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={() => setIsReversed((prevVal) => !prevVal)}\n        >\n          Reverse\n        </button>\n\n        {showResetBtn && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleClickReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsList.map((good) => {\n          const idUuid = uuidv4();\n\n          return (\n            <li key={idUuid} data-cy=\"Good\">\n              {good}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}